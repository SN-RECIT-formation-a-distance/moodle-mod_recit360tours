*[data-alert=success] {
  background-color: #dff0d8 !important;
  color: #3c763d !important;
}

*[data-alert=error] {
  background-color: #f2dede !important;
  color: #a94442 !important;
}

*[data-alert=warning] {
  background-color: #fcf8e3 !important;
  color: #8a6d3b !important;
}

.VisualFeedback {
  position: fixed;
  z-index: 9999;
  padding: 0;
  margin: 0;
  max-width: 800px;
  max-height: 500px;
  overflow: auto;
}

.VisualFeedback[data-feedback-type=error] {
  overflow: auto;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.VisualFeedback[data-feedback-type=warning] {
  top: auto;
  left: auto;
  right: 0;
  bottom: 0;
}

.VisualFeedback[data-feedback-type=info] {
  top: auto;
  left: auto;
  right: 0;
  bottom: 0;
}

.InputNumber {
  text-align: right;
}

.Loading {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 9999;
  display: none;
  pointer-events: none;
  width: 100%;
  height: 100%;
  /*background-color: rgba(0, 0, 0, 0.5);*/
}
.Loading .Img {
  width: 128px;
  height: 128px;
  position: relative;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  transform: translate(-50%, -50%);
}
/*
 * react-circular-progressbar styles
 * All of the styles in this file are configurable!
 */

.CircularProgressbar {
  /*
   * This fixes an issue where the CircularProgressbar svg has
   * 0 width inside a "display: flex" container, and thus not visible.
   */
  width: 100%;
  /*
   * This fixes a centering issue with CircularProgressbarWithChildren:
   * https://github.com/kevinsqi/react-circular-progressbar/issues/94
   */
  vertical-align: middle;
}

.CircularProgressbar .CircularProgressbar-path {
  stroke: #3e98c7;
  stroke-linecap: round;
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.CircularProgressbar .CircularProgressbar-trail {
  stroke: #d6d6d6;
  /* Used when trail is not full diameter, i.e. when props.circleRatio is set */
  stroke-linecap: round;
}

.CircularProgressbar .CircularProgressbar-text {
  fill: #3e98c7;
  font-size: 20px;
  dominant-baseline: middle;
  text-anchor: middle;
}

.CircularProgressbar .CircularProgressbar-background {
  fill: #d6d6d6;
}

/*
 * Sample background styles. Use these with e.g.:
 *
 *   <CircularProgressbar
 *     className="CircularProgressbar-inverted"
 *     background
 *     percentage={50}
 *   />
 */
.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-background {
  fill: #3e98c7;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text {
  fill: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path {
  stroke: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trail {
  stroke: transparent;
}

.a-enter-ar-button, .a-enter-vr-button {
  z-index: 999 !important;
}

html:not(.a-fullscreen) .a-enter-vr {
  top: 45px !important;
  bottom: unset !important;
  left: 5px;
}
html:not(.a-fullscreen) .a-enter-vr button {
  right: unset !important;
}

.btn-group > .btn.active, .btn-group > .btn:active, .btn-group > .btn:focus {
  z-index: 0;
}

/**********************************************************
/ tablets layout
/*********************************************************/
/**********************************************************
/ Smartphone layout
/*********************************************************/

/*# sourceMappingURL=/index.css.map */